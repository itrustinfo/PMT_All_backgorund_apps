add_documentspage
documents page

changed sp .[ActualDocuments_SelectBy_DocumentUID] 

select * from ActualDocuments where DocumentUID=@DocumentUID and Delete_Flag='N' and Doc_Type<>'Cover Letter' order by ActualDocument_RelativePath DEsc



added new sp [ActualDocuments_SelectBy_DirectoryName_New]


1680a928-1011-40ac-b109-10bd331835ea




select * from ActualDocuments where DocumentUID=@DocID  and (ActualDocument_RelativePath<> NULL OR ActualDocument_RelativePath !='') order by ActualDocument_RelativePath Desc-- and ActualDocument_DirectoryName=@ActualDocument_DirectoryName and Delete_Flag='N' order by ActualDocument_Name

DBGetData.cs


// 29/10/2020

Populate tree view tooltip cahnged to get realtive path
DBgetdata.cs 
Sp 

ALTER PROCEDURE [dbo].[ActualDocuments_SelectBy_DirectoryName_New]
	-- Add the parameters for the stored procedure here
@DocumentUID uniqueidentifier,
@ParentDirectoryName varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @DocID uniqueidentifier;
set @DocID=(select DocumentUID from ActualDocuments where ActualDocumentUID=@DocumentUID);
	select * from ActualDocuments where DocumentUID=@DocID and Delete_Flag='N' and (ActualDocument_RelativePath<> NULL OR ActualDocument_RelativePath !='') and SUBSTRING(ActualDocument_RelativePath,1,LEN(@ParentDirectoryName)) = @ParentDirectoryName  order by ActualDocument_RelativePath Desc-- and ActualDocument_DirectoryName=@ActualDocument_DirectoryName and Delete_Flag='N' order by ActualDocument_Name
END

// 02/11/2020
USE [PMT_Server]
GO

/****** Object:  Table [dbo].[MailQueue]    Script Date: 11/2/2020 1:21:28 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[MailQueue](
	[MailUID] [uniqueidentifier] NULL,
	[UserUID] [uniqueidentifier] NULL,
	[ToEmailID] [varchar](100) NULL,
	[FromEmailID] [varchar](100) NULL,
	[Subject] [varchar](100) NULL,
	[Body] [varchar](Max) NULL,
	[CCTo] [varchar](Max) NULL,
	[Attachment] [varchar](100) NULL,
	[MailSentDate] [datetime] NULL,
	[MailSent] [varchar](1) NULL
) ON [PRIMARY]

USE [PMT_Server]
GO
/****** Object:  StoredProcedure [dbo].[ups_Insert_Mails]    Script Date: 11/2/2020 12:12:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER proc [dbo].[ups_Insert_Mails]
@MailUID uniqueidentifier,
@UserUID uniqueidentifier,
@ToEmailID varchar(100),
@FromEmailID varchar(100),
@Subject varchar(100),
@Body varchar(Max),
@CCTo varchar(Max),
@Attachment varchar(100),
@MailSentDate datetime,
@MailSent varchar(1)
as
begin
insert into MailQueue(MailUID,UserUID,ToEmailID,FromEmailID,Subject,Body,CCTo,Attachment,MailSentDate,MailSent)
values(@MailUID,@UserUID,@ToEmailID,@FromEmailID,@Subject,@Body,@CCTo,@Attachment,@MailSentDate,@MailSent)
end


USE [PMT_Server]
GO

/****** Object:  Table [dbo].[MailQueue]    Script Date: 11/3/2020 1:19:26 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[MailQueue_Sent](
	[MailUID] [uniqueidentifier] NULL,
	[UserUID] [uniqueidentifier] NULL,
	[ToEmailID] [varchar](100) NULL,
	[FromEmailID] [varchar](100) NULL,
	[Subject] [varchar](100) NULL,
	[Body] [varchar](max) NULL,
	[CCTo] [varchar](max) NULL,
	[Attachment] [varchar](100) NULL,
	[MailSentDate] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO





DBGetdata.cs
add-submittal.cs
add-doccuments.aspx

04/11/2020
UserType_Functionality_MAster
UserType_Functionality_Mapping
UserRolesMaster

SP [usp_GetUserTypeFunctionalityMaster]   created
SP [usp_InsertUserTypeFunctionality_Mapping] created
SP [usp_GetUserTypeFunctionality_Mapping]  created

table and data
DBGetdata.cs

// added on 11/11/2020
[ups_InserorUpdateUser]   sp  modified
.[usp_GetUserDetails]   sp modified
[usp_Get_UserDetails]  sp modified
[usp_CheckUsernameExists]  new sp created
[usp_UpdatePassword] new sp created

alter table [UserDetails] alter column [Profile_Pic] varchar(250) NULL

add Photo_mb image

add-user.aspx
change-password.aspx
DBGetdata.cs


User matrix implementation

19, hiding the master page,  -Done
18.not clear - Done
17 .done
20 . Gantt chart.... menu hiding
16 .  finnancial hiding in workpackaages
11. Download approved documents  -Done
12.  Download Documents  - Done
9. View documents hide
8. include add submittal also  - Done

13/11/2020
documents Pages
view-documenthostory.aspx
default.master

18/11/2020
TaskStatus	varchar(1)	Checked  added for Alert
[usp_GetAllTasksForAlert]   new sp added
usp_GetAllMileStoneForAlert new sp added
[usp_InsertAlerts]  sp 


USE [PMT_Server]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetAllMileStoneForAlert]    Script Date: 11/18/2020 7:19:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_GetAllMileStoneForAlert] 
	-- Add the parameters for the stored procedure here
@TaskUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT * FRom 
[dbo].[MileStones]
Where TaskUID=@TaskUID and MileStoneDate < GETDATE() and Status = 'Not Completed'
END



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_GetAllTasksForAlert] 
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT * FROM [dbo].[Tasks] Where PlannedStartDate is NOT NULL and PlannedEndDate is not NULL


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER proc [dbo].[usp_InsertAlerts]
@Alert_UID uniqueidentifier,
@ProjectUID uniqueidentifier,
@WorkPackageUID uniqueidentifier,
@TaskUID uniqueidentifier,
@Alert_Text nvarchar(250),
@Alert_Date datetime,
@Alert_User nvarchar(50),
@Status as varchar(1)
as
begin
if not exists (select Alert_UID from Alerts where TaskUID=@TaskUID and Alert_User=@Alert_User and TaskStatus = @Status)
begin
insert into Alerts(Alert_UID,TaskUID,Alert_Text,Alert_Date,Alert_User,ProjectUID,WorkPackageUID,TaskStatus)
values(@Alert_UID,@TaskUID,@Alert_Text,@Alert_Date,@Alert_User,@ProjectUID,@WorkPackageUID,@Status)
end
end




END


// added on 20/11/2020
INSERT INTO [dbo].[UserType_Functionality_Master]
           ([UID]
           ,[Functionality]
           ,[Code])
     VALUES
           (NewID()
           ,'User Management'
           ,'UM')
GO


// added on 23/11/2020
add_documents page
DBGetData.cs

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[DocumentsUploadLog](
	[SrNo] [bigint] IDENTITY(1,1) NOT NULL,
	[ActualDocumentUID] [uniqueidentifier] NOT NULL,
	[UploadStartDate] [datetime] NULL,
	[UploadEndDate] [datetime] NULL,
	[UploadUserUID] [uniqueidentifier] NULL,
	[Duration] [float] NULL
 CONSTRAINT [PK_DocumentsUploadLog] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_InsertDocumentUploadLog] 
	-- Add the parameters for the stored procedure here
@ActualDocumentUID as uniqueidentifier,
@UploadStartDate as datetime,
@UploadEndDate as datetime,
@UploadUserUID as uniqueidentifier,
@Duration as float
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT INTO [dbo].[DocumentsUploadLog]
           ([ActualDocumentUID]
           ,[UploadStartDate]
           ,[UploadEndDate]
           ,[UploadUserUID]
		   ,[Duration])
     VALUES
           (@ActualDocumentUID
           ,@UploadStartDate
           ,@UploadEndDate
           ,@UploadUserUID
		   ,@Duration)

END
GO


// added on 24/11/2020
Install-Package Microsoft.SQLServer.SMO -Version 12.0.2000.8

// added on 26/11/2020
USE [PMT_Server]
GO

/****** Object:  Table [dbo].[BackupApplicationConfig]    Script Date: 11/26/2020 6:48:48 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[BackupApplicationConfig](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[ServerName] [varchar](150) NULL,
	[Username] [varchar](100) NULL,
	[Password] [varchar](100) NULL,
	[DatabaseName] [varchar](100) NULL,
	[DB_backupFilename] [varchar](100) NULL,
	[SourceAppPath] [varchar](250) NULL,
	[DestinationPath] [varchar](250) NULL,
	[AutoStart] [varchar](1) NULL,
	[StartDate] [datetime] NULL,
 CONSTRAINT [PK_BackupApplicationConfig] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

// added on 30/11/2020
USE [PMT_Server]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RestoreApplicationConfig](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[ServerName] [varchar](150) NULL,
	[Username] [varchar](100) NULL,
	[Password] [varchar](100) NULL,
	[DB_RestorePath] [varchar](100) NULL,
	[DB_backupFilename] [varchar](100) NULL,
	[SourceAppPath] [varchar](250) NULL,
	[DestinationPath] [varchar](250) NULL,
	[AutoStart] [varchar](1) NULL,
	[StartDate] [datetime] NULL,
 CONSTRAINT [PK_RestoreApplicationConfig] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


// added on 30/12/2020
USE [PMT_Server]
GO

/****** Object:  Table [dbo].[RABills]    Script Date: 1/4/2021 2:52:42 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RABills](
	[UID] [uniqueidentifier] NOT NULL,
	[WorkPackageUID] [uniqueidentifier] NOT NULL,
	[ItemID] [nvarchar](50) NULL,
	[Description] [varchar](250) NULL,
	[Quantity] [varchar](20) NULL,
	[QuotedPrice_Tender] [float] NULL,
	[BasicCost] [float] NULL,
	[GST] [float] NULL,
	[TotalPrice] [float] NULL,
	[Cost_Per] [float] NULL,
	[UOM] [varchar](10) NULL,
	[Remarks] [varchar](250) NULL,
	[CreatedDate] [datetime] NULL,
	[Date1] [datetime] NULL,
	[Date2] [datetime] NULL,
	[ParentItemUID] [uniqueidentifier] NULL,
	[UnitPrice] [float] NULL,
 CONSTRAINT [PK_RABills] PRIMARY KEY CLUSTERED 
(
	[UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO





USE [PMT_Server]
GO
/****** Object:  StoredProcedure [dbo].[usp_InsertorUpdateRABills]    Script Date: 1/4/2021 2:20:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_InsertorUpdateRABills] 
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@WorkPackageUID as uniqueidentifier,
@ItemID as nvarchar(50),
@Description as varchar(250),
@Quantity as varchar(20),
@QuotedPrice_Tender as float,
@BasicCost as float,
@GST as float,
@TotalPrice as float,
@Cost_Per as float,
@UOM as varchar(10),
@Remarks as varchar(250),
@ParentItemUID as uniqueidentifier,
@UnitPrice as float
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF not EXISTS (SELECT * FROM RABills WHERE WorkPackageUID = @WorkPackageUID and ItemID = @ItemID and ParentItemUID = @ParentItemUID)
BEGIN
   INSERT INTO [dbo].[RABills]
           ([UID]
           ,[WorkPackageUID]
           ,[ItemID]
           ,[Description]
           ,[Quantity]
           ,[QuotedPrice_Tender]
           ,[BasicCost]
           ,[GST]
           ,[TotalPrice]
           ,[Cost_Per]
           ,[UOM]
           ,[Remarks]
           ,[CreatedDate]
           ,[ParentItemUID]
           ,[UnitPrice])
     VALUES
           (@UID
           ,@WorkPackageUID
           ,@ItemID
           ,@Description
           ,@Quantity
           ,@QuotedPrice_Tender
           ,@BasicCost
           ,@GST
           ,@TotalPrice
           ,@Cost_Per
           ,@UOM
           ,@Remarks
           ,GETDATE()
           ,@ParentItemUID
           ,@UnitPrice)
END
END

// added on 04/02/2021
USE [PMT_Server]
GO

/****** Object:  Table [dbo].[CashFlowStatement]    Script Date: 1/4/2021 2:52:04 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CashFlowStatement](
	[UID] [uniqueidentifier] NOT NULL,
	[WorkPackageUID] [uniqueidentifier] NULL,
	[Cash_Flow_Payment_Progressive] [float] NULL,
	[Cash_Flow_Mob_Advance] [float] NULL,
	[Deduc_IT_2_Per] [float] NULL,
	[Deduc_IT_1.5_Per] [float] NULL,
	[Deduc_CGST_1_Per] [float] NULL,
	[Deduc_SGST_1_Per] [float] NULL,
	[Deduc_GST_2_Per] [float] NULL,
	[Deduc_Retention_5_Per] [float] NULL,
	[Deduc_Mob_Advance_10_Per] [float] NULL,
	[Deduc_LaborCess_1_Per] [float] NULL,
	[MiltiplyingFactor] [smallint] NULL,
	[CreatedDate] [datetime] NULL,
	[Month] [varchar](20) NULL,
	[Year] [smallint] NULL,
 CONSTRAINT [PK_CashFlowStatement] PRIMARY KEY CLUSTERED 
(
	[UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

// added on 05/01/2021
USE [ONTB_Server]
GO

/****** Object:  Table [dbo].[FinanceMileStoneMonth]    Script Date: 1/7/2021 1:06:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[FinanceMileStoneMonth](
	[FinMileStoneMonthUID] [uniqueidentifier] NOT NULL,
	[Finance_MileStoneUID] [uniqueidentifier] NULL,
	[AllowedPayment] [float] NULL,
	[UserCreated] [uniqueidentifier] NULL,
	[CreatedDate] [datetime] NULL,
	[DeletedFlag] [varchar](1) NULL,
	[Month] [varchar](20) NULL,
	[Year] [int] NULL,
	[MultiplyingFactor] [bigint] NULL,
	[WorkPackageUID] [uniqueidentifier] NULL,
	[OrderBy] [int] NULL,
 CONSTRAINT [PK_FinanceMileStoneMonth] PRIMARY KEY CLUSTERED 
(
	[FinMileStoneMonthUID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO








IsMonth, varchar(1), added to FinanceMileStones


-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_InsertorUpdateFinMilestoneExccel] 
	-- Add the parameters for the stored procedure here
@Finance_MileStoneUID as uniqueidentifier,
@TaskUID as uniqueidentifier,
@Finance_MileStoneName as varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF not EXISTS (SELECT * FROM FinanceMileStones WHERE TaskUID = @TaskUID and Finance_MileStoneName = @Finance_MileStoneName)
BEGIN
	INSERT INTO [dbo].[FinanceMileStones]
           ([Finance_MileStoneUID]
           ,[TaskUID]
           ,[Finance_MileStoneName]
           ,[Delete_Flag]
           ,[IsMonth])
     VALUES
           (@Finance_MileStoneUID
           ,@TaskUID
           ,@Finance_MileStoneName
           ,'N'
           ,'Y')
		   END
END
GO


-- ================================================
USE [PMT_Server]
GO
/****** Object:  StoredProcedure [dbo].[usp_InsertFinMilestoneMonthExccel]    Script Date: 1/6/2021 11:40:07 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_InsertFinMilestoneMonthExccel] 
	-- Add the parameters for the stored procedure here
@FinMileStoneMonthUID as uniqueidentifier,
@Finance_MileStoneUID as uniqueidentifier,
@AllowedPayment as float,
@Month as varchar(20),
@Year as int,
@WorkPackageUID as uniqueidentifier,
@OrderBy as int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF not EXISTS (SELECT * FROM FinanceMileStoneMonth WHERE Finance_MileStoneUID = @Finance_MileStoneUID and Month = @Month and Year=@Year)
BEGIN
	INSERT INTO [dbo].[FinanceMileStoneMonth]
           ([FinMileStoneMonthUID]
           ,[Finance_MileStoneUID]
           ,[AllowedPayment]
           ,[CreatedDate]
           ,[DeletedFlag]
           ,[Month]
           ,[Year]
		   ,[MultiplyingFactor]
,[WorkPackageUID],[OrderBy])
     VALUES
           (@FinMileStoneMonthUID
           ,@Finance_MileStoneUID
           ,@AllowedPayment
           ,GETDATE()
           ,'N'
           ,@Month
           ,@Year
		   ,1,
@WorkPackageUID,@OrderBy)
		   END
END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[usp_FinanceMileStone_Selectby_WorkPackageUID]
@TaskUID uniqueidentifier
as
begin
set nocount on;
select * FRom FinanceMileStones Where TaskUID =@TaskUID and Delete_Flag ='N'
end


//
CREATE PROCEDURE [usp_GetFinMilestoneMonths] 
	-- Add the parameters for the stored procedure here
@FinanceMileStone_UID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT    *,(Month +' ' + CONVERT(varchar(10), Year)) as MonthYear    
FROM FinanceMileStoneMonth Where Finance_MileStoneUID =@FinanceMileStone_UID Order By OrderBy
END
GO


CREATE PROCEDURE [usp_GetFinMilestoneMonthsData] 
	-- Add the parameters for the stored procedure here
@FinMileStoneMonthUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT (AllowedPayment * MultiplyingFactor) as ApprovedPayment    
FROM FinanceMileStoneMonth Where FinMileStoneMonthUID =@FinMileStoneMonthUID
END
GO



FinanceMileStoneMonthUID	uniqueidentifier	Checked  added to FinanceMileStonePaymentUpdates


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[usp_FinanceMileStonePaymentUpdate_InsertMonth]
@FinanceMileStoneUpdate_UID uniqueidentifier,
@Finance_MileStoneUID uniqueidentifier,
@Finance_MileStoneMonthUID uniqueidentifier,
@Allowed_Payment float,
@Actual_Payment float,
@Actual_PaymentDate datetime,
@Updated_User uniqueidentifier
as
begin



insert into FinanceMileStonePaymentUpdates(FinanceMileStoneUpdate_UID,Finance_MileStoneUID,Allowed_Payment,Actual_Payment,Actual_PaymentDate,Updated_User,FinanceMileStoneMonthUID)
values(@FinanceMileStoneUpdate_UID,@Finance_MileStoneUID,@Allowed_Payment,@Actual_Payment,@Actual_PaymentDate,@Updated_User,@Finance_MileStoneMonthUID)
end



CREATE PROCEDURE [usp_GetFinMilestonePayment] 
	-- Add the parameters for the stored procedure here
@FinanceMileStone_UID as uniqueidentifier,
@FinanceMileStoneMonth_UID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select * From FinanceMileStonePaymentUpdates Where Finance_MileStoneUID =@FinanceMileStone_UID
	and FinanceMileStoneMonthUID=@FinanceMileStoneMonth_UID
END
GO


Alter table [dbo].[FinanceMileStoneMonth] Alter column [AllowedPayment] decimal(18,2)




// added on 12/01/2020 for review meeting on 16th jan 2021
USE [ONTB_Server]
GO

/****** Object:  Table [dbo].[Status_Budget_Disbursement]    Script Date: 1/12/2021 6:32:44 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Status_Budget_Disbursement](
	[UID] [uniqueidentifier] NOT NULL,
	[ProjectUID] [uniqueidentifier] NULL,
	[ContractorName] [varchar](100) NULL,
	[ContractorUID] [uniqueidentifier] NULL,
	[AwardedCost] [decimal](18, 2) NULL,
	[Disbursement_Amount] [decimal](18, 2) NULL,
	[Disbursement_Year] [nvarchar](20) NULL,
	[Budget_Year] [nvarchar](20) NULL,
	[Q1_Budget_Amount] [decimal](18, 2) NULL,
	[Q2_Budget_Amount] [decimal](18, 2) NULL,
	[Q3_Budget_Amount] [decimal](18, 2) NULL,
	[Q4_Budget_Amount] [decimal](18, 2) NULL,
	[Actual_Year] [nvarchar](20) NULL,
	[Q1_Actual_Amount] [decimal](18, 2) NULL,
	[Q2_Actual_Amount] [decimal](18, 2) NULL,
	[Q3_Actual_Amount] [decimal](18, 2) NULL,
	[Q4_Actual_Amount] [decimal](18, 2) NULL,
	[CreatedDate] [datetime] NULL,
	[ProjectName] [varchar](100) NULL,
	[DeleteFlag] [varchar](1) NULL,
[Meeting_UID] [uniqueidentifier] NULL,
 CONSTRAINT [PK_Status_Budget_Disbursement] PRIMARY KEY CLUSTERED 
(
	[UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[BWSSB_JICA_Disbursement](
	[UID] [uniqueidentifier] NOT NULL,
	[ProjectUID] [uniqueidentifier] NULL,
	[ContractorName] [varchar](100) NULL,
	[ContractorUID] [uniqueidentifier] NULL,
	[AwardedCost] [decimal](18, 2) NULL,
	[Payment_Year] [nvarchar](20) NULL,
	[Q1_Payment_Amount] [decimal](18, 2) NULL,
	[Q2_Payment_Amount] [decimal](18, 2) NULL,
	[Q3_Payment_Amount] [decimal](18, 2) NULL,
	[Q4_Payment_Amount] [decimal](18, 2) NULL,
	[Actual_Year] [nvarchar](20) NULL,
	[Q1_Actual_Amount] [decimal](18, 2) NULL,
	[Q2_Actual_Amount] [decimal](18, 2) NULL,
	[Q3_Actual_Amount] [decimal](18, 2) NULL,
	[Q4_Actual_Amount] [decimal](18, 2) NULL,
	[CreatedDate] [datetime] NULL,
	[ProjectName] [varchar](100) NULL,
	[DeleteFlag] [varchar](1) NULL,
[Meeting_UID] [uniqueidentifier] NULL,
 CONSTRAINT [PK_BWSSB_JICA_Disbursement] PRIMARY KEY CLUSTERED 
(
	[UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_InsertorUpdateBudget] 
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@ProjectUID	 as uniqueidentifier,
@ContractorName as varchar(100),
@AwardedCost as float,
@Disbursement_Amount as float,
@Disbursement_Year as nvarchar(20),
@Budget_Year as nvarchar(20),
@Q1_Budget_Amount as float,
@Q2_Budget_Amount as float,
@Q3_Budget_Amount as float,
@Q4_Budget_Amount as float,
@Actual_Year as nvarchar(20),
@Q1_Actual_Amount as float,
@Q2_Actual_Amount as float,
@Q3_Actual_Amount as float,
@Q4_Actual_Amount as float,
@ProjectName as varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF not EXISTS (SELECT * FROM Status_Budget_Disbursement WHERE ProjectUID = @ProjectUID and Budget_Year=@Budget_Year)
BEGIN
	INSERT INTO [dbo].[Status_Budget_Disbursement]
           ([UID]
           ,[ProjectUID]
           ,[ContractorName]
           ,[AwardedCost]
           ,[Disbursement_Amount]
           ,[Disbursement_Year]
           ,[Budget_Year]
           ,[Q1_Budget_Amount]
           ,[Q2_Budget_Amount]
           ,[Q3_Budget_Amount]
           ,[Q4_Budget_Amount]
           ,[Actual_Year]
           ,[Q1_Actual_Amount]
           ,[Q2_Actual_Amount]
           ,[Q3_Actual_Amount]
           ,[Q4_Actual_Amount]
           ,[CreatedDate]
           ,[ProjectName]
           ,[DeleteFlag])
     VALUES
           (@UID
           ,@ProjectUID
           ,@ContractorName
           ,@AwardedCost
           ,@Disbursement_Amount
           ,@Disbursement_Year
           ,@Budget_Year
           ,@Q1_Budget_Amount
           ,@Q2_Budget_Amount
           ,@Q3_Budget_Amount
           ,@Q4_Budget_Amount
           ,@Actual_Year
           ,@Q1_Actual_Amount
           ,@Q2_Actual_Amount
           ,@Q3_Actual_Amount
           ,@Q4_Actual_Amount
           ,GETDATE()
           ,@ProjectName
           ,'N')
		   END


END


-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_GetBudgetvsDisbursement] 
	-- Add the parameters for the stored procedure here
	
@MeetingUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT *,(Disbursement_Amount + Q1_Actual_Amount + Q2_Actual_Amount + Q3_Actual_Amount + Q4_Actual_Amount) as TotalDisburseAmnt From Status_Budget_Disbursement Where Meeting_UID =@MeetingUID and DeleteFlag='N' Order by ProjectName ASC
END
GO



CREATE PROCEDURE [usp_InsertorUpdateBWSSB_JICA_Disbursement] 
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@ProjectUID	 as uniqueidentifier,
@ContractorName as varchar(100),
@AwardedCost as float,
@Payment_Year as nvarchar(20),
@Q1_Payment_Amount as float,
@Q2_Payment_Amount as float,
@Q3_Payment_Amount as float,
@Q4_Payment_Amount as float,
@Actual_Year as nvarchar(20),
@Q1_Actual_Amount as float,
@Q2_Actual_Amount as float,
@Q3_Actual_Amount as float,
@Q4_Actual_Amount as float,
@ProjectName as varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF not EXISTS (SELECT * FROM [BWSSB_JICA_Disbursement] WHERE ProjectUID = @ProjectUID and Payment_Year=@Payment_Year)
BEGIN
INSERT INTO [dbo].[BWSSB_JICA_Disbursement]
           ([UID]
           ,[ProjectUID]
           ,[ContractorName]
           ,[AwardedCost]
           ,[Payment_Year]
           ,[Q1_Payment_Amount]
           ,[Q2_Payment_Amount]
           ,[Q3_Payment_Amount]
           ,[Q4_Payment_Amount]
           ,[Actual_Year]
           ,[Q1_Actual_Amount]
           ,[Q2_Actual_Amount]
           ,[Q3_Actual_Amount]
           ,[Q4_Actual_Amount]
           ,[CreatedDate]
           ,[ProjectName]
           ,[DeleteFlag])
     VALUES
           (@UID
           ,@ProjectUID
           ,@ContractorName
           ,@AwardedCost
           ,@Payment_Year
           ,@Q1_Payment_Amount
           ,@Q2_Payment_Amount
           ,@Q3_Payment_Amount
           ,@Q4_Payment_Amount
           ,@Actual_Year
           ,@Q1_Actual_Amount
           ,@Q2_Actual_Amount
           ,@Q3_Actual_Amount
           ,@Q4_Actual_Amount
           ,GETDATE()
           ,@ProjectName
           ,'N')

		   END


END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [usp_GetBWSSB_VS_JICA_Disbursement] 
	-- Add the parameters for the stored procedure here
@MeetingUID as uniqueidentifier	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT * From [dbo].[BWSSB_JICA_Disbursement] Where Meeting_UID=@MeetingUID and DeleteFlag='N' Order by ProjectName ASC
END
//------------------------
0.066873


// added on 21/01/2021
USE [ONTB_Arun]
GO

/****** Object:  Table [dbo].[MeetingMaster]    Script Date: 1/21/2021 2:39:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[MeetingMaster](
	[Meeting_UID] [uniqueidentifier] NOT NULL,
	[Meeting_Description] [varchar](250) NULL,
	[CreatedDate] [datetime] NULL,
 CONSTRAINT [PK_MeetingMaster] PRIMARY KEY CLUSTERED 
(
	[Meeting_UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_GetMeetingMaster] 
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * FRom [dbo].[MeetingMaster] order by CreatedDate Asc
END
GO
-----------------------------------------------

CREATE PROCEDURE [usp_GetbwssbvsJICA_UID]
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * From [dbo].[BWSSB_JICA_Disbursement] Where UID =@UID
END
GO

--------------------------------------------------

-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_GetBudgetvsDisbursemnt_UID]
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * From [dbo].[Status_Budget_Disbursement] Where UID =@UID
END
GO


CREATE PROCEDURE [usp_UpdateBudgetvsDisbursement]
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@ContractorName as varchar(100),
@AwardedCost as float,
@Disbursement_Amount as float,
@Q1_Budget_Amount as float,
@Q2_Budget_Amount as float,
@Q3_Budget_Amount as float,
@Q4_Budget_Amount as float,
@Q1_Actual_Amount as float,
@Q2_Actual_Amount as float,
@Q3_Actual_Amount as float,
@Q4_Actual_Amount as float

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update [dbo].[Status_Budget_Disbursement]
	set ContractorName =@ContractorName,
	AwardedCost =@AwardedCost,
	Disbursement_Amount=@Disbursement_Amount,
	Q1_Budget_Amount=@Q1_Budget_Amount,
	Q2_Budget_Amount=@Q2_Budget_Amount,
	Q3_Budget_Amount=@Q3_Budget_Amount,
	Q4_Budget_Amount=@Q4_Budget_Amount,
	Q1_Actual_Amount =@Q1_Actual_Amount,
	Q2_Actual_Amount =@Q2_Actual_Amount,
	Q3_Actual_Amount =@Q3_Actual_Amount,
	Q4_Actual_Amount =@Q4_Actual_Amount
	Where UID=@UID

END
GO



CREATE PROCEDURE [usp_UpdateBWSSBvsJICADisbursement]
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@ContractorName as varchar(100),
@AwardedCost as float,
@Q1_Payment_Amount as float,
@Q2_Payment_Amount as float,
@Q3_Payment_Amount as float,
@Q4_Payment_Amount as float,
@Q1_Actual_Amount as float,
@Q2_Actual_Amount as float,
@Q3_Actual_Amount as float,
@Q4_Actual_Amount as float

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update [dbo].[BWSSB_JICA_Disbursement]
	set ContractorName =@ContractorName,
	AwardedCost =@AwardedCost,
	Q1_Payment_Amount=@Q1_Payment_Amount,
	Q2_Payment_Amount=@Q2_Payment_Amount,
	Q3_Payment_Amount=@Q3_Payment_Amount,
	Q4_Payment_Amount=@Q4_Payment_Amount,
	Q1_Actual_Amount =@Q1_Actual_Amount,
	Q2_Actual_Amount =@Q2_Actual_Amount,
	Q3_Actual_Amount =@Q3_Actual_Amount,
	Q4_Actual_Amount =@Q4_Actual_Amount
	Where UID=@UID

END
GO


-----------------

CREATE PROCEDURE [usp_CopyStatusvsDisbursementData]
	-- Add the parameters for the stored procedure here
@SourceMeetingUID as uniqueidentifier,
@DestMeetingUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

Delete From [Status_Budget_Disbursement] Where Meeting_UID = @DestMeetingUID
   
    -- Insert statements for procedure here
	Insert into [dbo].[Status_Budget_Disbursement] ([UID]
      ,[ProjectUID]
      ,[ContractorName]
      ,[ContractorUID]
      ,[AwardedCost]
      ,[Disbursement_Amount]
      ,[Disbursement_Year]
      ,[Budget_Year]
      ,[Q1_Budget_Amount]
      ,[Q2_Budget_Amount]
      ,[Q3_Budget_Amount]
      ,[Q4_Budget_Amount]
      ,[Actual_Year]
      ,[Q1_Actual_Amount]
      ,[Q2_Actual_Amount]
      ,[Q3_Actual_Amount]
      ,[Q4_Actual_Amount]
      ,[CreatedDate]
      ,[ProjectName]
      ,[DeleteFlag]
      ,[Meeting_UID])
select NEWID()
      ,[ProjectUID]
      ,[ContractorName]
      ,[ContractorUID]
      ,[AwardedCost]
      ,[Disbursement_Amount]
      ,[Disbursement_Year]
      ,[Budget_Year]
      ,[Q1_Budget_Amount]
      ,[Q2_Budget_Amount]
      ,[Q3_Budget_Amount]
      ,[Q4_Budget_Amount]
      ,[Actual_Year]
      ,[Q1_Actual_Amount]
      ,[Q2_Actual_Amount]
      ,[Q3_Actual_Amount]
      ,[Q4_Actual_Amount]
      ,GETDATE()
      ,[ProjectName]
      ,[DeleteFlag]
      ,@DestMeetingUID From [dbo].[Status_Budget_Disbursement]
Where [Status_Budget_Disbursement].Meeting_UID =@SourceMeetingUID
END
GO



CREATE PROCEDURE [usp_CopyBWSSB_JICA_Disbursement]
	-- Add the parameters for the stored procedure here
@SourceMeetingUID as uniqueidentifier,
@DestMeetingUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	Delete From [BWSSB_JICA_Disbursement] Where Meeting_UID = @DestMeetingUID
    -- Insert statements for procedure here
	Insert into [dbo].[BWSSB_JICA_Disbursement]  ([UID]
           ,[ProjectUID]
           ,[ContractorName]
           ,[ContractorUID]
           ,[AwardedCost]
           ,[Payment_Year]
           ,[Q1_Payment_Amount]
           ,[Q2_Payment_Amount]
           ,[Q3_Payment_Amount]
           ,[Q4_Payment_Amount]
           ,[Actual_Year]
           ,[Q1_Actual_Amount]
           ,[Q2_Actual_Amount]
           ,[Q3_Actual_Amount]
           ,[Q4_Actual_Amount]
           ,[CreatedDate]
           ,[ProjectName]
           ,[DeleteFlag]
           ,[Meeting_UID])
select NEWID()
      ,[ProjectUID]
      ,[ContractorName]
      ,[ContractorUID]
      ,[AwardedCost]
      ,[Payment_Year]
      ,[Q1_Payment_Amount]
       ,[Q2_Payment_Amount]
       ,[Q3_Payment_Amount]
        ,[Q4_Payment_Amount]
      ,[Actual_Year]
      ,[Q1_Actual_Amount]
      ,[Q2_Actual_Amount]
      ,[Q3_Actual_Amount]
      ,[Q4_Actual_Amount]
      ,GETDATE()
      ,[ProjectName]
      ,[DeleteFlag]
      ,@DestMeetingUID From [dbo].[BWSSB_JICA_Disbursement]
Where [BWSSB_JICA_Disbursement].Meeting_UID =@SourceMeetingUID
END
GO


/// added on 25/01/2021

USE [ONTB_Arun_22jan]
GO

/****** Object:  Table [dbo].[Status_WasteWater_ContractPackage]    Script Date: 1/25/2021 5:38:58 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Status_WasteWater_ContractPackage](
	[UID] [uniqueidentifier] NOT NULL,
	[ProjectUID] [uniqueidentifier] NULL,
	[ProjectName] [varchar](100) NULL,
	[PackageDescription] [varchar](250) NULL,
	[AwardedCost] [decimal](18, 2) NULL,
	[ProjectComponent] [varchar](max) NULL,
	[PresentStatus] [varchar](max) NULL,
	[Meeting_UID] [uniqueidentifier] NULL,
	[CreatedDate] [datetime] NULL,
	[DeletedFlag] [varchar](1) NULL,
	[Componenttype] [varchar](100) NULL,
 CONSTRAINT [PK_Status_WasteWater_ContractPackage] PRIMARY KEY CLUSTERED 
(
	[UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO



CREATE PROCEDURE [usp_InsertorUpdateStatusWasteWater] 
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@ProjectUID as uniqueidentifier,
@ProjectName as varchar(100),
@PackageDescription as varchar(250),
@AwardedCost as float,
@ProjectComponent as varchar(max),
@PresentStatus as varchar(max),
@Meeting_UID as uniqueidentifier,
@Componenttype as varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	IF not EXISTS (SELECT * FROM Status_WasteWater_ContractPackage WHERE ProjectUID = @ProjectUID  and Meeting_UID = @Meeting_UID and Componenttype=@Componenttype)
BEGIN
    -- Insert statements for procedure here
	INSERT INTO [dbo].[Status_WasteWater_ContractPackage]
           ([UID]
           ,[ProjectUID]
           ,[ProjectName]
           ,[PackageDescription]
           ,[AwardedCost]
           ,[ProjectComponent]
           ,[PresentStatus]
           ,[Meeting_UID]
           ,[CreatedDate]
           ,[DeletedFlag]
           ,[Componenttype])
     VALUES
           (@UID
           ,@ProjectUID
           ,@ProjectName
           ,@PackageDescription
           ,@AwardedCost
           ,@ProjectComponent
           ,@PresentStatus
           ,@Meeting_UID
           ,GETDATE()
           ,'N'
           ,@Componenttype)
		   END
END
GO


CREATE PROCEDURE [usp_GetStatusWasteWater] 
	-- Add the parameters for the stored procedure here
@Meeting_UID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * From [dbo].[Status_WasteWater_ContractPackage] Where Meeting_UID=@Meeting_UID Order by ProjectName Asc
END
GO

//------------------------------

CREATE PROCEDURE [usp_GetStatusWasteWaterUID] 
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * From [dbo].[Status_WasteWater_ContractPackage] Where UID =@UID
END
GO


-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_UpdateStatusWasteWater] 
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@ProjectUID as uniqueidentifier,
@ProjectName as varchar(100),
@PackageDescription as varchar(250),
@AwardedCost as float,
@ProjectComponent as varchar(max),
@PresentStatus as varchar(max),
@Componenttype as varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	UPDATE [dbo].[Status_WasteWater_ContractPackage]
   SET 
      [ProjectUID] = @ProjectUID
      ,[ProjectName] = @ProjectName
      ,[PackageDescription] = @PackageDescription
      ,[AwardedCost] = @AwardedCost
      ,[ProjectComponent] = @ProjectComponent
      ,[PresentStatus] = @PresentStatus
      ,[Componenttype] = @Componenttype
 WHERE UID = @UID
END
GO


CREATE PROCEDURE [usp_CopyStatusWasteWater]
	-- Add the parameters for the stored procedure here
	@SourceMeetingUID as uniqueidentifier,
@DestMeetingUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	Delete From [Status_WasteWater_ContractPackage] Where Meeting_UID = @DestMeetingUID
    -- Insert statements for procedure here
	INSERT INTO [dbo].[Status_WasteWater_ContractPackage]
           ([UID]
           ,[ProjectUID]
           ,[ProjectName]
           ,[PackageDescription]
           ,[AwardedCost]
           ,[ProjectComponent]
           ,[PresentStatus]
           ,[Meeting_UID]
           ,[CreatedDate]
           ,[DeletedFlag]
           ,[Componenttype])
select NEWID()
      ,[ProjectUID]
     ,[ProjectName]
           ,[PackageDescription]
           ,[AwardedCost]
           ,[ProjectComponent]
           ,[PresentStatus]
           ,@DestMeetingUID
           ,GETDATE()
           ,[DeletedFlag]
           ,[Componenttype]
       From [dbo].[Status_WasteWater_ContractPackage]
Where [Status_WasteWater_ContractPackage].Meeting_UID =@SourceMeetingUID
END



-----

USE [NJSEI_latest]
GO
/****** Object:  StoredProcedure [dbo].[ActualDocuments_SelectBy_WorkpackageUID_Search1]    Script Date: 2/11/2021 2:02:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER proc [dbo].[ActualDocuments_SelectBy_WorkpackageUID_Search1]
@ProjectUID uniqueidentifier,
@Status as varchar(100),
@WorkPackageUID uniqueidentifier,
@DocumentName as varchar(250),
@Doctype as varchar(50),
@SubmittalName as varchar(100),
@Type as smallint,
@DocDate as Datetime,
@DocumentDate as Datetime
as
begin
set nocount on;
DECLARE @sql NVARCHAR(MAX) ;
DEclare @docdater as nvarchar(Max);
DEclare @documentdater as nvarchar(Max);
Declare @WkpgUID as nvarchar(max);
Declare @PrjUID as nvarchar(max);
set @docdater = CAST(@DocDate as DATE);
set @documentdater = CAST(@DocumentDate as DATE);
set @WkpgUID = @WorkPackageUID;
set @PrjUID=@ProjectUID;
SET
   @sql = N'SELECT        ActualDocuments.ActualDocumentUID, ActualDocuments.ProjectUID, ActualDocuments.WorkPackageUID, ActualDocuments.DocumentUID, ActualDocuments.ProjectRef_Number, ActualDocuments.Ref_Number, 
 ActualDocuments.Doc_Type, ActualDocuments.IncomingRec_Date, ActualDocuments.FlowUID, ActualDocuments.ActualDocument_Name, ActualDocuments.Description, ActualDocuments.ActualDocument_Version, ActualDocuments.ActualDocument_Type, ActualDocuments.ActualDocument_Originator, ActualDocuments.Media_HC, ActualDocuments.Media_SC, ActualDocuments.Media_SCEF, ActualDocuments.Media_HCR, ActualDocuments.Media_SCR, ActualDocuments.Media_NA, ActualDocuments.Document_Date, ActualDocuments.ActualDocument_Path, ActualDocuments.ActualDocument_RelativePath, ActualDocuments.ActualDocument_DirectoryName, ActualDocuments.Remarks, ActualDocuments.FileRef_Number, ActualDocuments.ActualDocument_CreatedDate, ActualDocuments.ActualDocument_CurrentStatus, ActualDocuments.Delete_Flag, ActualDocuments.FlowStep1_TargetDate, ActualDocuments.FlowStep2_TargetDate, ActualDocuments.FlowStep3_TargetDate, ActualDocuments.FlowStep4_TargetDate, ActualDocuments.FlowStep5_TargetDate, Documents.DocName 
   FROM
      ActualDocuments 
      INNER JOIN
         Documents 
         ON ActualDocuments.DocumentUID = Documents.DocumentUID'
 
        
            set
               @sql = @sql + ' Where  ActualDocuments.Delete_Flag = ''N''' 
			   set @sql =@sql + ' AND ActualDocuments.ProjectUID = ''' + @PrjUID + '''' 
                set @sql =@sql + ' AND ActualDocuments.WorkPackageUID = ''' + @WkpgUID + '''' 
               set @sql =@sql + ' AND (ActualDocuments.Doc_Type = ''Document'''
               set @sql =@sql + ' OR ActualDocuments.Doc_Type = ''General Document'')'
               IF (@Status != 'All')
               Begin
                set
            @sql = @sql + ' AND ActualDocuments.ActualDocument_CurrentStatus =''' + @Status + '''' 
            end
             IF (@DocumentName != '')
               Begin
                set
            @sql = @sql + ' AND ActualDocuments.ActualDocument_Name Like ''%' + @DocumentName + '%''' 
            end
            IF (@Doctype != 'All')
               Begin
                set
            @sql = @sql + ' AND ActualDocuments.ActualDocument_Type Like ''%' + @Doctype + '%''' 
            end
             IF (@SubmittalName != '')
               Begin
                set
            @sql = @sql + ' AND Documents.DocName Like ''%' + @SubmittalName + '%''' 
            end
              IF (@Type = 1)
               Begin
                set
            @sql = @sql + ' AND CAST(ActualDocuments.IncomingRec_Date as DATE) = ''' + @docdater + '''' 
            end
			IF (@Type = 2)
               Begin
                set
            @sql = @sql + ' AND CAST(ActualDocuments.Document_Date as DATE) = ''' + @documentdater + '''' 
            end
			IF (@Type = 3)
               Begin
			     set
            @sql = @sql + ' AND CAST(ActualDocuments.IncomingRec_Date as DATE) = ''' + @docdater + '''' 
                set
            @sql = @sql + ' AND CAST(ActualDocuments.Document_Date as DATE) = ''' + @documentdater + '''' 
            end

            set @sql = @sql + ' ORDER BY ActualDocuments.IncomingRec_Date DESC'
               EXEC(@sql)
end

// added on 09/02/2021


ALTER PROCEDURE [dbo].[usp_GetStatusForSearch] 
	-- Add the parameters for the stored procedure here
@WorkPackageUID as uniqueidentifier	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select Distinct ActualDocuments.ActualDocument_CurrentStatus From dbo.ActualDocuments Where ActualDocuments.Delete_Flag ='N' and ActualDocuments.WorkPackageUID=@WorkPackageUID and (Doc_Type='Document' or Doc_Type='General Document')  Order by ActualDocuments.ActualDocument_CurrentStatus Asc
END



ALTER PROCEDURE [dbo].[usp_GetDoctypeForSearch] 
	-- Add the parameters for the stored procedure here
@WorkPackageUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * From dbo.DocumentTypeMaster Where 
DocumentExtension in (Select distinct ActualDocument_Type From ActualDocuments Where WorkPackageUID=@WorkPackageUID and (Doc_Type='Document' or Doc_Type='General Document')) --and DocumentExtension <>'.xlsx' and DocumentExtension <>'.docx' 
Order by DocumentType ASC
--select * From dbo.DocumentTypeMaster where DocumentExtension <>'.xlsx' and DocumentExtension <>'.docx' Order by DocumentType ASC
END


// addded on 15/02/2021
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER proc [dbo].[usp_FinanceMileStone_Selectby_WorkPackageUID]
@TaskUID uniqueidentifier
as
begin
set nocount on;
SELECT        FinanceMileStones.Finance_MileStoneUID, FinanceMileStones.TaskUID, FinanceMileStones.Finance_MileStoneName, FinanceMileStones.IsMonth, FinanceMileStoneMonth.AllowedPayment,FinanceMileStoneMonth.FinMileStoneMonthUID 
                         (Month +' ' + CONVERT(varchar(10), Year)) as MonthYear,0 as PaymentMade
FROM            FinanceMileStones INNER JOIN
                         FinanceMileStoneMonth ON FinanceMileStones.Finance_MileStoneUID = FinanceMileStoneMonth.Finance_MileStoneUID Where TaskUID =@TaskUID and Delete_Flag ='N'
end

// added on 18/02/2021
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RABillPayments](
	[PaymentUID] [uniqueidentifier] NOT NULL,
	[InvoiceUID] [uniqueidentifier] NULL,
	[RABillDesc] [varchar](max) NULL,
	[Amount] [decimal](18, 2) NULL,
	[TotalDeductions] [decimal](18, 2) NULL,
	[NetAmount] [decimal](18, 2) NULL,
	[CreatedDate] [datetime] NULL,
	[DeletedFlag] [varchar](1) NULL,
 CONSTRAINT [PK_RABillPayments] PRIMARY KEY CLUSTERED 
(
	[PaymentUID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[RABillPaymentDeductions](
	[UID] [uniqueidentifier] NOT NULL,
	[PaymentUID] [uniqueidentifier] NULL,
	[DeductionUID] [uniqueidentifier] NULL,
	[Amount] [decimal](18, 2) NULL,
 CONSTRAINT [PK_RABillPaymentDeductions] PRIMARY KEY CLUSTERED 
(
	[UID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_InsertRABillPayments]
	-- Add the parameters for the stored procedure here
@PaymentUID as uniqueidentifier,
@InvoiceUID as uniqueidentifier,
@RABillDesc as varchar(max),
@Amount as float,
@TotalDeductions as float,
@NetAmount as float,
@FinMonthUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT INTO [dbo].[RABillPayments]
           ([PaymentUID]
           ,[InvoiceUID]
           ,[RABillDesc]
           ,[Amount]
           ,[TotalDeductions]
           ,[NetAmount]
           ,[CreatedDate]
           ,[DeletedFlag],
		   [FinMileStoneMonthUID])
     VALUES
           (@PaymentUID
           ,@InvoiceUID
           ,@RABillDesc
           ,@Amount
           ,@TotalDeductions
           ,@NetAmount
           ,GETDATE()
           ,'N'
		   ,@FinMonthUID)
END





SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_InsertRABillsDeductions]
	-- Add the parameters for the stored procedure here
@UID as uniqueidentifier,
@PaymentUID as uniqueidentifier,
@DeductionUID as uniqueidentifier,
@Amount as float
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT INTO [dbo].[RABillPaymentDeductions]
           ([UID]
           ,[PaymentUID]
           ,[DeductionUID]
           ,[Amount])
     VALUES
           (@UID
           ,@PaymentUID
           ,@DeductionUID
           ,@Amount)
END
GO



CREATE PROCEDURE [usp_GetDeductionFromDesc]
	-- Add the parameters for the stored procedure here
@DeductionsDescription as varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select * From [dbo].[DeductionsMaster] where DeductionsDescription =@DeductionsDescription
END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_GetDeductionMaster]
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT [UID]
      ,[DeductionsDescription]
  FROM [dbo].[DeductionsMaster]
END
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_GetRABillPaymentsbyMonth]
	-- Add the parameters for the stored procedure here
@FinMileStoneMonthUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select * FRom [dbo].[RABillPayments] where FinMileStoneMonthUID=@FinMileStoneMonthUID and DeletedFlag='N'
END
GO


// added on 22/02/2021
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [usp_GetRABillsPayments] 
	-- Add the parameters for the stored procedure here
@PaymentUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select * From RABillPayments Where PaymentUID = @PaymentUID
END
GO



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [usp_GetRABillsPaymentsDeductions] 
	-- Add the parameters for the stored procedure here
@PaymentUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select * From RABillPaymentDeductions Where PaymentUID =@PaymentUID
END
GO


// added on 25/02/2021

USE [ONTB_Arun_25Feb]
GO
/****** Object:  StoredProcedure [dbo].[usp_InsertIntoGeneralDocuments]    Script Date: 2/25/2021 6:06:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_InsertIntoGeneralDocuments] 
	-- Add the parameters for the stored procedure here
@GeneralDocumentUID as uniqueidentifier,
@StructureUID as uniqueidentifier,
@Ref_Number as varchar(75),
@GeneralDocument_Name as varchar(250),
@GeneralDocument_Description as varchar(max),
@GeneralDocument_Version as varchar(max),
@GeneralDocument_Type as varchar(max),
@Media_HC varchar(50),
@Media_SC varchar(50),
@Media_SCEF varchar(50),
@Media_HCR varchar(50),
@Media_SCR varchar(50),
@Media_NA varchar(50),
@IncomingRec_Date as datetime,
@Document_Date as datetime,
@GeneralDocument_Path as varchar(500),
@GeneralDocument_RelativePath as varchar(500),
@GeneralDocument_DirectoryName as varchar(500),
@FileRef_Number as varchar(100),
@GeneralDocument_CurrentStatus as varchar(100),
@Remarks as varchar(max),
@UploadFilePhysicalpath varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if not exists (select * from GeneralDocuments where GeneralDocumentUID=@GeneralDocumentUID)
begin	
	INSERT INTO [dbo].[GeneralDocuments]
           ([GeneralDocumentUID]
           ,[StructureUID]
           ,[Ref_Number]
           ,[GeneralDocument_Name]
           ,[GeneralDocument_Description]
           ,[GeneralDocument_Version]
           ,[GeneralDocument_Type]
           ,[GeneralDocument_Originator]
           ,[Media_HC]
           ,[Media_SC]
           ,[Media_SCEF]
           ,[Media_HCR]
           ,[Media_SCR]
           ,[Media_NA]
           ,[IncomingRec_Date]
           ,[Document_Date]
           ,[GeneralDocument_Path]
           ,[GeneralDocument_RelativePath]
           ,[GeneralDocument_DirectoryName]
           ,[FileRef_Number]
           ,[GeneralDocument_CreatedDate]
           ,[GeneralDocument_CurrentStatus]
           ,[Remarks]
           ,[Delete_Flag])
     VALUES
           (@GeneralDocumentUID
           ,@StructureUID
           ,@Ref_Number
           ,@GeneralDocument_Name
           ,@GeneralDocument_Description
           ,@GeneralDocument_Version
           ,@GeneralDocument_Type
           ,NULL
           ,@Media_HC
           ,@Media_SC
           ,@Media_SCEF
           ,@Media_HCR
           ,@Media_SCR
           ,@Media_NA
           ,@IncomingRec_Date
           ,@Document_Date
           ,@GeneralDocument_Path
           ,@GeneralDocument_RelativePath
           ,@GeneralDocument_DirectoryName
           ,@FileRef_Number
           ,GETDATE()
           ,@GeneralDocument_CurrentStatus
           ,@Remarks
           ,'N')

		   -- Insert to WordDocRead table
	declare @strPath varchar(500)=@GeneralDocument_Path;
	set @strPath = (select reverse(left(reverse(@strPath),CHARINDEX('.',reverse(@strPath))-1)))

	if(@strPath = 'doc' or @strPath = 'docx')
	begin
		insert into WordDocRead(UID,Doc_path,Status,CreatedDate,DocumemtUID,Encrypted)
		values(NEWID(),@UploadFilePhysicalpath,'Pending',GETDATE(),@GeneralDocumentUID,'Y')
	end

		   END
END



CREATE PROCEDURE [usp_GetFolderNameByUID]
	-- Add the parameters for the stored procedure here
@StructureUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT        Structure_Name
FROM            GeneralDocumentStructure
Where StructureUID=@StructureUID
END
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GeneralDocuments_SelectBy_StructureUID]
@StructureUID uniqueidentifier
as
begin
set nocount on;
select * from GeneralDocuments where StructureUID=@StructureUID and Delete_Flag='N' 
end


// added on 26/01/2021
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_GetDoctypeForSearchGD] 
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select * From dbo.DocumentTypeMaster Where 
DocumentExtension in (Select distinct GeneralDocument_Type From GeneralDocuments)
Order by DocumentType ASC
--select * From dbo.DocumentTypeMaster where DocumentExtension <>'.xlsx' and DocumentExtension <>'.docx' Order by DocumentType ASC
END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER proc [dbo].[GeneralDocuments_Search]
@DocumentName as varchar(250),
@Doctype as varchar(50),
@Type as smallint,
@DocDate as Datetime,
@DocumentDate as Datetime,
@DocDateTo as Datetime,
@DocumentDateTo as Datetime
as
begin
set nocount on;
DECLARE @sql NVARCHAR(MAX) ;
DEclare @docdater as nvarchar(Max);
DEclare @documentdater as nvarchar(Max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @documentdaterTo as nvarchar(Max);

set @docdater = CAST(@DocDate as DATE);
set @documentdater = CAST(@DocumentDate as DATE);
set @docdaterTo = CAST(@DocDateTo as DATE);
set @documentdaterTo = CAST(@DocumentDateTo as DATE);

SET
   @sql = N'select * from GeneralDocuments'
 
        
            set
               @sql = @sql + ' Where  GeneralDocuments.Delete_Flag = ''N''' 

             IF (@DocumentName != '')
               Begin
                set
            @sql = @sql + ' AND GeneralDocuments.GeneralDocument_Name Like ''%' + @DocumentName + '%''' 
            end
            IF (@Doctype != 'All')
               Begin
                set
            @sql = @sql + ' AND GeneralDocuments.GeneralDocument_Type Like ''%' + @Doctype + '%''' 
            end
             
              IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(GeneralDocuments.IncomingRec_Date as DATE) >= ''' + @docdater + '''' 
			set @sql = @sql + ' AND CAST(GeneralDocuments.IncomingRec_Date as DATE) <= ''' + @docdaterTo + '''' 
            end
			IF (@Type = 2)
               Begin
                set
            @sql = @sql + ' AND CAST(GeneralDocuments.Document_Date as DATE) >= ''' + @documentdater + '''' 
			 set
            @sql = @sql + ' AND CAST(GeneralDocuments.Document_Date as DATE) <= ''' + @documentdaterTo + '''' 
            end
			IF (@Type = 3)
               Begin
			     set
          @sql = @sql + 'AND CAST(GeneralDocuments.IncomingRec_Date as DATE) >= ''' + @docdater + '''' 
			set @sql = @sql + ' AND CAST(GeneralDocuments.IncomingRec_Date as DATE) <= ''' + @docdaterTo + '''' 
			 set @sql = @sql + ' AND CAST(GeneralDocuments.Document_Date as DATE) >= ''' + @documentdater + '''' 
			 set
            @sql = @sql + ' AND CAST(GeneralDocuments.Document_Date as DATE) <= ''' + @documentdaterTo + '''' 
            end

            set @sql = @sql + ' ORDER BY GeneralDocuments.IncomingRec_Date DESC'
               EXEC(@sql)
end



// added on 10/03/2021
CREATE PROCEDURE [dbo].[usp_GetUsersList] 
	-- Add the parameters for the stored procedure here
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select UserUID,(FirstName + ' ' + LastName) as Name,EmailID From UserDetails Where (TypeOfUser ='DDE' or TypeOfUser='DDE') and DeletedFlag ='N'
END


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_GetGDByUser]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;

Declare @User as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
    -- Insert statements for procedure here
	SET
   @sql = N'Select * From GeneralDocuments'
    set @sql =@sql + ' Where GeneralDocuments.Created_By = ''' + @User + '''' 
   set
               @sql = @sql + ' and  GeneralDocuments.Delete_Flag = ''N''' 
			   IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(GeneralDocuments.GeneralDocument_CreatedDate as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(GeneralDocuments.GeneralDocument_CreatedDate as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)
END



---------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_GetUserProjects]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID

	Union All
SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'General Documents' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID
END


---------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_GetPrjectdocumnetscount] 
	-- Add the parameters for the stored procedure here
@ProjectUID as uniqueidentifier,
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
Declare @Prj as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
set @prj = @ProjectUID
    -- Insert statements for procedure here

SET
   @sql = N'SELECT Count(ActualDocuments.ActualDocument_Name) as Count FROM Documents INNER JOIN
                         ActualDocuments ON Documents.DocumentUID = ActualDocuments.DocumentUID'

			set @sql =@sql + ' Where ActualDocuments.ProjectUID = ''' + @prj + '''' 
			set @sql =@sql + ' and Documents.FlowStep1_UserUID = ''' + @User + '''' 
			set
               @sql = @sql + ' and  ActualDocuments.Delete_Flag = ''N''' 
			 IF (@Type = 1)
               Begin
                set
            @sql = @sql + ' AND CAST(ActualDocuments.ActualDocument_CreatedDate as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(ActualDocuments.ActualDocument_CreatedDate as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)
			 
END





-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_GetAllUserDocuments] 
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID

    -- Insert statements for procedure here

SET
   @sql = N'SELECT ActualDocuments.ActualDocumentUID as DocumentUID,ActualDocuments.ActualDocument_Path,ProjectDetails.ProjectName,Documents.DocName AS Submittal, ActualDocuments.ActualDocument_Name AS DocName, ActualDocuments.ActualDocument_Type AS Type, ActualDocuments.ActualDocument_CurrentStatus AS Status, 
                         ActualDocuments.ActualDocument_CreatedDate AS IncomingRcvDate, ActualDocuments.Document_Date as Document_Date
FROM            Documents INNER JOIN
                         ActualDocuments ON Documents.DocumentUID = ActualDocuments.DocumentUID INNER JOIN
                         ProjectDetails ON ActualDocuments.ProjectUID = ProjectDetails.ProjectUID'


			set @sql =@sql + ' Where Documents.FlowStep1_UserUID = ''' + @User + '''' 
			  set
               @sql = @sql + ' and  ActualDocuments.Delete_Flag = ''N''' 
			 IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(ActualDocuments.ActualDocument_CreatedDate as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(ActualDocuments.ActualDocument_CreatedDate as DATE) <= ''' + @docdaterTo + '''' 
            end
			
			set @sql = @sql + ' Union All '

			set @sql = @sql +  'Select GeneralDocumentUID as DocumentUID,GeneralDocument_Path as ActualDocument_Path,''General Documents'' as ProjectName,'''' as Submittal,GeneralDocument_Name as DocName,GeneralDocument_Type as Type,GeneralDocument_CurrentStatus as Status,IncomingRec_Date as IncomingRcvDate,Document_Date From GeneralDocuments'

			 set @sql =@sql + ' Where GeneralDocuments.Created_By = ''' + @User + '''' 
   set
               @sql = @sql + ' and  GeneralDocuments.Delete_Flag = ''N''' 
			   IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(GeneralDocuments.GeneralDocument_CreatedDate as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(GeneralDocuments.GeneralDocument_CreatedDate as DATE) <= ''' + @docdaterTo + '''' 
            end
			
			   EXEC(@sql)
			  
			 
END




-----

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_GetDocCountGD]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint,
@SType as varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
Declare @Prj as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID


    -- Insert statements for procedure here
SET
   @sql = N'SELECT SUM(Action_Count) as Count FROM [dbo].[DocumentHistory]'

  
			set @sql =@sql + ' Where UserUID = ''' + @User + '''' 
			set @sql =@sql + ' and Action_Type = ''' + @SType + '''' 
			set @sql =@sql + ' and ProjectUID is NULL'
    IF (@Type = 1)
               Begin
                set
            @sql = @sql + ' AND CAST(LastAction_Date as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(LastAction_Date as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)

END



-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_GetDocCount]
	-- Add the parameters for the stored procedure here
@ProjectUID as uniqueidentifier,
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint,
@SType as varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
Declare @Prj as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
set @prj = @ProjectUID

    -- Insert statements for procedure here
SET
   @sql = N'SELECT SUM(Action_Count) as Count FROM [dbo].[DocumentHistory]'

   set @sql =@sql + ' Where ProjectUID = ''' + @prj + '''' 
			set @sql =@sql + ' and UserUID = ''' + @User + '''' 
			set @sql =@sql + ' and Action_Type = ''' + @SType + '''' 
    IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(LastAction_Date as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(LastAction_Date as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)

END


// added on 18/03/2021
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_GetUsersListByPrj] 
	-- Add the parameters for the stored procedure here
@ProjectUID as uniqueidentifier	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	SELECT        UserProjects.UserUID, (UserDetails.FirstName + ' ' +  UserDetails.LastName) as Name,UserDetails.EmailID
FROM            UserProjects INNER JOIN
                         UserDetails ON UserProjects.UserUID = UserDetails.UserUID
						 Where (TypeOfUser ='DDE' or TypeOfUser='DDE') and DeletedFlag ='N'
						 and UserProjects.ProjectUID =@ProjectUID
END

-------

ALTER PROCEDURE [dbo].[usp_GetUserProjects]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@Type as smallint,
@ProjectUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
IF @Type = 1
Begin
	SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID

	Union All
SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'General Documents' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID
	END
ELSE IF @Type = 2
BEGIN
    SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID and UserProjects.ProjectUID =@ProjectUID


END
ELSE IF @Type = 3
BEGIN
  SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'General Documents' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID


END
END


----

ALTER PROCEDURE [dbo].[usp_GetAllUserDocumentsByPrj] 
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint,
@ProjectUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
Declare @Prj as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
set @Prj =@ProjectUID
    -- Insert statements for procedure here

SET
   @sql = N'SELECT ActualDocuments.ActualDocumentUID as DocumentUID,ActualDocuments.ActualDocument_Path,ProjectDetails.ProjectName,Documents.DocName AS Submittal, ActualDocuments.ActualDocument_Name AS DocName, ActualDocuments.ActualDocument_Type AS Type, ActualDocuments.ActualDocument_CurrentStatus AS Status, 
                         ActualDocuments.ActualDocument_CreatedDate AS IncomingRcvDate, ActualDocuments.Document_Date as Document_Date
FROM            Documents INNER JOIN
                         ActualDocuments ON Documents.DocumentUID = ActualDocuments.DocumentUID INNER JOIN
                         ProjectDetails ON ActualDocuments.ProjectUID = ProjectDetails.ProjectUID'


			set @sql =@sql + ' Where Documents.FlowStep1_UserUID = ''' + @User + '''' 
			set @sql =@sql + ' and ActualDocuments.ProjectUID = ''' + @Prj + '''' 
			  set
               @sql = @sql + ' and  ActualDocuments.Delete_Flag = ''N''' 
			 IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(ActualDocuments.ActualDocument_CreatedDate as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(ActualDocuments.ActualDocument_CreatedDate as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)
			  
			 
END


----

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_GetGDByUser]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;

Declare @User as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
    -- Insert statements for procedure here
	SET
   @sql = N'Select *,GeneralDocumentUID as DocumentUID,GeneralDocument_Path as ActualDocument_Path,''General Documents'' as ProjectName,'''' as Submittal,GeneralDocument_Name as DocName,GeneralDocument_Type as Type,GeneralDocument_CurrentStatus as Status,IncomingRec_Date as IncomingRcvDate From GeneralDocuments'
    set @sql =@sql + ' Where GeneralDocuments.Created_By = ''' + @User + '''' 
   set
               @sql = @sql + ' and  GeneralDocuments.Delete_Flag = ''N''' 
			   IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(GeneralDocuments.GeneralDocument_CreatedDate as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(GeneralDocuments.GeneralDocument_CreatedDate as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)
END

-------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_GetDocCountGDByDoc]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint,
@SType as varchar(50),
@DocumentUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
Declare @Prj as nvarchar(max);
Declare @docID as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
set @docID = @DocumentUID

    -- Insert statements for procedure here
SET
   @sql = N'SELECT SUM(Action_Count) as Count FROM [dbo].[DocumentHistory]'

			set @sql = @sql + ' Where DocumentUID in (Select GeneralDocumentUID From GeneralDocuments Where Delete_Flag=''N'')'
			set @sql =@sql + ' and UserUID = ''' + @User + '''' 
			set @sql =@sql + ' and Action_Type = ''' + @SType + '''' 
			set @sql =@sql + ' and DocumentUID = ''' + @docID + '''' 
			set @sql =@sql + ' and ProjectUID is NULL'
    IF (@Type = 1)
               Begin
                set
            @sql = @sql + ' AND CAST(LastAction_Date as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(LastAction_Date as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)

END


-------

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_GetDocCountByDoc]
	-- Add the parameters for the stored procedure here
@DocumentUID as uniqueidentifier,
@UserUID as uniqueidentifier,
@DateFrom as Datetime,
@DateTo as Datetime,
@Type as smallint,
@SType as varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql NVARCHAR(MAX) ;
Declare @User as nvarchar(max);
Declare @docID as nvarchar(max);
DEclare @docdaterTo as nvarchar(Max);
DEclare @docdaterFrom as nvarchar(Max);
set @docdaterTo = CAST(@DateTo as DATE);
set @docdaterFrom = CAST(@DateFrom as DATE);
set @User=@UserUID
set @docID = @DocumentUID

    -- Insert statements for procedure here
SET
   @sql = N'SELECT SUM(Action_Count) as Count FROM [dbo].[DocumentHistory]'
			set @sql = @sql + ' Where DocumentUID in (Select ActualDocumentUID From ActualDocuments Where Delete_Flag=''N'')'
				set @sql =@sql + ' and DocumentUID = ''' + @docID + '''' 
			set @sql =@sql + ' and UserUID = ''' + @User + '''' 
			set @sql =@sql + ' and Action_Type = ''' + @SType + '''' 
    IF (@Type = 1)
               Begin
                set
            @sql = @sql + 'AND CAST(LastAction_Date as DATE) >= ''' + @docdaterFrom + '''' 
			set @sql = @sql + ' AND CAST(LastAction_Date as DATE) <= ''' + @docdaterTo + '''' 
            end
			   EXEC(@sql)

END



----
// added on 21/03/2020
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_GetUserProjects]
	-- Add the parameters for the stored procedure here
@UserUID as uniqueidentifier,
@Type as smallint,
@ProjectUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
IF @Type = 1
Begin
	SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID

	Union All
SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'General Documents' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID
			Union All
SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'Total' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID
	END
ELSE IF @Type = 2
BEGIN
    SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID and UserProjects.ProjectUID =@ProjectUID


END
ELSE IF @Type = 3
BEGIN
  SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'General Documents' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID


END
ELSE IF @Type = 4
Begin
	SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID

	Union All
SELECT        NEWID() as ProjectUID,@UserUID  as UserUID, 'General Documents' as ProjectName
FROM            UserDetails 
						 Where UserDetails.UserUID = @UserUID
			
	END
	ELSE IF @Type = 5
Begin
	SELECT        UserProjects.ProjectUID, UserProjects.UserUID, ProjectDetails.ProjectName
FROM            UserProjects INNER JOIN
                         ProjectDetails ON UserProjects.ProjectUID = ProjectDetails.ProjectUID
						 Where UserProjects.UserUID = @UserUID and UserProjects.ProjectUID =@ProjectUID

	
			
	END

END


// added on 20/04/2021

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[usp_GetInvoiceMasterByWkpg]
	-- Add the parameters for the stored procedure here
@WorkPackageUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select * From [dbo].[InvoiceMaster] Where WorkpackageUID =@WorkPackageUID
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[usp_GetSumBillValueForInvoice] 
	-- Add the parameters for the stored procedure here
@InvoiceMasterUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select Sum(Invoice_TotalAmount) as BillValue From [dbo].[InvoiceMaster] Where InvoiceMaster_UID = @InvoiceMasterUID
END



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[usp_GetInvoiceDeductions] 
	-- Add the parameters for the stored procedure here
@InvoiceMasterUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT        Invoice_Deduction.Deduction_UID, DeductionsMaster.DeductionsDescription, Invoice_Deduction.Amount, Invoice_Deduction.Percentage, DeductionsMaster.Maxpercentage
FROM            Invoice_Deduction INNER JOIN
                         DeductionsMaster ON Invoice_Deduction.Deduction_UID = DeductionsMaster.UID
						 Where Invoice_Deduction.InvoiceMaster_UID = @InvoiceMasterUID and Invoice_Deduction.Delete_Flag ='N'
						 Order by Invoice_Deduction.Order_By Asc

END


CREATE PROCEDURE [dbo].[usp_GetNetBillValueForInvoice] 
	-- Add the parameters for the stored procedure here
@InvoiceMasterUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Select Sum(Invoice_NetAmount) as BillValue From [dbo].[InvoiceMaster] Where InvoiceMaster_UID = @InvoiceMasterUID
END


ALTER PROCEDURE [dbo].[usp_GetRABillPaymentsbyMonth]
	-- Add the parameters for the stored procedure here
@FinMileStoneMonthUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT        RABillPayments.PaymentUID, RABillPayments.RABillDesc, RABillPayments.Amount, RABillPayments.TotalDeductions, RABillPayments.NetAmount, RABillPayments.CreatedDate, RABillPayments.DeletedFlag, 
                         RABillPayments.FinMileStoneMonthUID, RABillPayments.InvoiceUID, InvoiceMaster.Invoice_Number,InvoiceMaster.WorkpackageUID
FROM            RABillPayments INNER JOIN
                         InvoiceMaster ON RABillPayments.InvoiceUID = InvoiceMaster.InvoiceMaster_UID where FinMileStoneMonthUID=@FinMileStoneMonthUID and DeletedFlag='N'
END





---- added on 26/04/2021--------
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[BackupLogs](
	[SrNo] [int] IDENTITY(1,1) NOT NULL,
	[backupdate] [date] NULL,
	[Starttime] [datetime] NULL,
	[endtime] [datetime] NULL,
	[type] [varchar](20) NULL,
[folder] [varchar](20) NULL,
 CONSTRAINT [PK_BackupLogs] PRIMARY KEY CLUSTERED 
(
	[SrNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

FullBackupDay	smallint	Checked    added to BackupApplicationConfig

DestinationDBPath	varchar(250)	Checked

ErrorEmailTo	varchar(500)	Checked

ErrorCCTo	varchar(500)	Checked


// added on 30/04/2021-----
PaymentDate	date	Checked add  to RABillPayments


ALTER PROCEDURE [dbo].[usp_InsertRABillPayments]
	-- Add the parameters for the stored procedure here
@PaymentUID as uniqueidentifier,
@InvoiceUID as uniqueidentifier,
@RABillDesc as varchar(max),
@Amount as float,
@TotalDeductions as float,
@NetAmount as float,
@FinMonthUID as uniqueidentifier,
@PaymentDate as Date
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF not EXISTS (SELECT * FROM RABillPayments WHERE PaymentUID = @PaymentUID)
BEGIN
	INSERT INTO [dbo].[RABillPayments]
           ([PaymentUID]
           ,[InvoiceUID]
           ,[RABillDesc]
           ,[Amount]
           ,[TotalDeductions]
           ,[NetAmount]
           ,[CreatedDate]
           ,[DeletedFlag],
		   [FinMileStoneMonthUID]
		   ,[PaymentDate])
     VALUES
           (@PaymentUID
           ,@InvoiceUID
           ,@RABillDesc
           ,@Amount
           ,@TotalDeductions
           ,@NetAmount
           ,GETDATE()
           ,'N'
		   ,@FinMonthUID
		   ,@PaymentDate)
		   END
		   else
begin
	UPDATE RABillPayments
	set   InvoiceUID = @InvoiceUID,
	        RABillDesc = @RABillDesc,
	        Amount = @Amount,
	        TotalDeductions  =@TotalDeductions,
	        NetAmount = @NetAmount,
			PaymentDate = @PaymentDate
            Where PaymentUID = @PaymentUID
end
END


ALTER PROCEDURE [dbo].[usp_GetRABillPaymentsbyMonth]
	-- Add the parameters for the stored procedure here
@FinMileStoneMonthUID as uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT        RABillPayments.PaymentUID, RABillPayments.RABillDesc, RABillPayments.Amount, RABillPayments.TotalDeductions, RABillPayments.NetAmount, RABillPayments.CreatedDate, RABillPayments.DeletedFlag, 
                         RABillPayments.FinMileStoneMonthUID, RABillPayments.InvoiceUID, InvoiceMaster.Invoice_Number,InvoiceMaster.WorkpackageUID,RABillPayments.PaymentDate
FROM            RABillPayments INNER JOIN
                         InvoiceMaster ON RABillPayments.InvoiceUID = InvoiceMaster.InvoiceMaster_UID where FinMileStoneMonthUID=@FinMileStoneMonthUID and DeletedFlag='N'
END


ALTER PROCEDURE [dbo].[usp_GetInvoiceMasterByWkpg]
	-- Add the parameters for the stored procedure here
@WorkPackageUID as uniqueidentifier,
@Type as int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	If @Type = 2
	Begin
	Select * From [dbo].[InvoiceMaster] Where WorkpackageUID =@WorkPackageUID --and InvoiceMaster_UID Not in (Select InvoiceUID From RABillPayments Where DeletedFlag ='N')
	END
	ELSE
	Begin

	Select * From [dbo].[InvoiceMaster] Where WorkpackageUID =@WorkPackageUID and InvoiceMaster_UID Not in (Select InvoiceUID From RABillPayments Where DeletedFlag ='N')
	END
END