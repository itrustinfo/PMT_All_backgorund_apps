 private void Bind_DocumentsChart4()
        {

            DataSet ds = getdt.getContractorDocumentCount_by_ProjectUID_WorkPackageUID(new Guid(DDlProject.SelectedValue), new Guid(DDLWorkPackage.SelectedValue));

            BtoF.Visible = false;

            if (ds == null)
            {
                ltScript_Document.Text = "<h4>No data</h4>";
            }
            else
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    StringBuilder strScript = new StringBuilder();

                    strScript.Append(@"<script type='text/javascript'>
                                google.charts.load('current', { packages: ['corechart', 'bar'] });
                                google.charts.setOnLoadCallback(drawBasic);

                            function drawBasic() {
                                var data = google.visualization.arrayToDataTable([
                                    ['Document','FlowAll','Delayed', { role: 'annotation' }],");

                    string total_docs = ds.Tables[0].Rows[0][1].ToString();


                    foreach (DataRow rw in ds.Tables[0].Rows)
                    {
                        strScript.Append("['" + rw[2].ToString() + "', " + Convert.ToInt32(rw[1].ToString()) + ", " + "0" + ",'" + Convert.ToInt32(rw[1].ToString()) + "'],");
                    }

                    strScript.Remove(strScript.Length - 1, 1);
                    strScript.Append("]);");
                    strScript.Append(@"var options = {
                                is3D: true,
                                legend: { position: 'none' },
                                fontSize: 11,
                                isStacked: true,
                                height : 300,
                                chartArea: {
                                    left: '25%',
                                    top: '5%',
                                    height: '100%',
                                    width: '61%'
                                },
                                bars: 'horizontal',
                                annotations: {
                                alwaysOutside:false,
                                },
                                axes: {
                                    x: {
                                        0: { side: 'top', label: 'Percentage' } // Top x-axis.
                                    }
                                },
                                hAxis: {
                                    minValue: 0
                                }
                            };

                            function selectHandler()
                            {
                                var selection = chart.getSelection();
                                if (selection.length > 0)
                                {
                                    var colLabel = data.getColumnLabel(selection[0].column);
                                    var mydata = data.getValue(selection[0].row,0);
                                    ");
                    strScript.Append("window.open('/_content_pages/dashboard/default.aspx?option=' + mydata +'&selection=2' ,'_self', true);");

                    strScript.Append(@"}
                            }

                            var chart = new google.visualization.BarChart(document.getElementById('DocChart_Div'));
                            google.visualization.events.addListener(chart, 'select', selectHandler);
                            chart.draw(data, options);
                        }
                    </script>");
                    ltScript_Document.Text = strScript.ToString();
                }
                else
                {
                    ltScript_Document.Text = "<h4>No data</h4>";
                }
            }
        }

//------------------------------------------------------------

 private void Bind_DocumentsChart5()
        {
            if (DDLWorkPackage.SelectedValue != "--Select--")
            {
                DataSet ds = getdt.getDocumentCount_by_ProjectUID_WorkPackageUID2(new Guid(DDlProject.SelectedValue), new Guid(DDLWorkPackage.SelectedValue), Request.QueryString["Option"].ToString());

                if (ds.Tables[0].Rows.Count > 0)
                {
                    StringBuilder strScript = new StringBuilder();
                    strScript.Append(@"<script type='text/javascript'>
                google.charts.load('current', { packages: ['corechart', 'bar'] });
                google.charts.setOnLoadCallback(drawBasic);

                function drawBasic() {
                    var data = google.visualization.arrayToDataTable([
                      ['Document', 'Ontime','Delayed', { role: 'annotation' }],");

                    foreach (DataRow r in ds.Tables[0].Rows)
                    {
                        string status_name = r.ItemArray[0].ToString();
                        int status_count = Convert.ToInt32(r.ItemArray[1].ToString());
                        int status_delay_count = 0; // Convert.ToInt32(r.ItemArray[2].ToString());

                        strScript.Append("['" + status_name + "'," + Math.Abs(status_count - status_delay_count).ToString() + "," + status_delay_count.ToString() + ",'" + status_count.ToString() + "'],");
                    }


                    strScript.Remove(strScript.Length - 1, 1);
                    strScript.Append("]);");
                    strScript.Append(@"var options = {
                        is3D: true,
                        legend: { position: 'none' },
                        fontSize: 13,
                        isStacked: true,
                        chartArea: {
                            left: '25%',
                            top: '5%',
                            height: '88%',
                            width: '61%'
                        },
                        bars: 'horizontal',
                        annotations: {
                        alwaysOutside:true,
                        },
                        axes: {
                            x: {
                                0: { side: 'top', label: 'Percentage' } // Top x-axis.
                            }
                        },
                        hAxis: {
                            minValue: 0
                        }
                    };
                    function selectHandler()
                    {
                        var selection = chart.getSelection();
                        if (selection.length > 0)
                        {
                            var colLabel = data.getColumnLabel(selection[0].column);
                            var mydata = data.getValue(selection[0].row,0);
                            ");
                    strScript.Append("window.open('/_content_pages/document-drilldown/default.aspx?DocumentType=' + (colLabel + '_' + mydata) + '&selection=2' + '&Flow=" + Request.QueryString["Option"].ToString() +"&ProjectUID=" + DDlProject.SelectedValue + "&WorkPackageUID=" + DDLWorkPackage.SelectedValue + "', '_self', true);");
                    //alert('The user selected ' + topping);
                    strScript.Append(@"}
                    }
                    
                    var chart = new google.visualization.BarChart(document.getElementById('DocChart_Div'));
                    google.visualization.events.addListener(chart, 'select', selectHandler);
                    chart.draw(data, options);
                }
            </script>");
                    ltScript_Document.Text = strScript.ToString();

                    BtoF.HRef = "/_content_pages/dashboard/default.aspx";
                    BtoF.Visible = true;
                }
                else
                {
                    ltScript_Document.Text = "<h4>No data</h4>";
                }
            }
        }

---------------------------------------------------------

 protected void RdList3_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (RdList3.SelectedValue == "Total")
            {
                Bind_DocumentsChart();
            }
            else
            {
               Bind_DocumentsChart4();
            }

        }

------------------------------------------------------------------

  protected void DDlProject_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (DDlProject.SelectedValue != "--Select--")
            {
                divdashboardimage.Visible = true;
                dummyNJSEIdashboard.Visible = false;
                divdummydashboard.Visible = false;
                dummyONTBdashboard.Visible = false;
                DataSet ds = new DataSet();
                //ds = getdt.GetWorkPackages_By_ProjectUID(new Guid(DDlProject.SelectedValue));
                if (Session["TypeOfUser"].ToString() == "U" || Session["TypeOfUser"].ToString() == "MD" || Session["TypeOfUser"].ToString() == "VP")
                {
                    ds = getdt.GetWorkPackages_By_ProjectUID(new Guid(DDlProject.SelectedValue));
                }
                else if (Session["TypeOfUser"].ToString() == "PA")
                {
                    ds = getdt.GetWorkPackages_ForUser_by_ProjectUID(new Guid(Session["UserUID"].ToString()), new Guid(DDlProject.SelectedValue));
                }
                else
                {
                    ds = getdt.GetWorkPackages_ForUser_by_ProjectUID(new Guid(Session["UserUID"].ToString()), new Guid(DDlProject.SelectedValue));
                }
                //ds = getdt.GetWorkPackages_By_ProjectUID(new Guid(DDlProject.SelectedValue));
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        DDLWorkPackage.DataTextField = "Name";
                        DDLWorkPackage.DataValueField = "WorkPackageUID";
                        DDLWorkPackage.DataSource = ds;
                        DDLWorkPackage.DataBind();
                    SelectedProjectWorkpackage("Workpackage");
                    //  DDLWorkPackage.Items.Insert(0, "--Select--");
                    BindResourceMaster();

                    if (Request.QueryString["Option"] != null)
                    {
                        if (Request.QueryString["selection"] == "1")
                        {
                            Bind_DocumentsChart1();
                            RdList3.SelectedIndex = 0;
                        }
                          
                        else
                        {
                            Bind_DocumentsChart5();
                            RdList3.SelectedIndex = 1;
                        }
                            
                    }
                    else
                    {
                        if (RdList3.SelectedValue == "Total")
                        {
                            Bind_DocumentsChart();
                        }
                        else
                        {
                            Bind_DocumentsChart4();
                        }
                    }
                   
                        BindAlerts("WorkPackage");
                        BindActivityPie_Chart("Work Package", DDLWorkPackage.SelectedValue);
                        //Bind_ResourceChart("Work Package", DDLWorkPackage.SelectedValue);
                    // Bind_ProgressChart("Work Package", DDLWorkPackage.SelectedValue);
                    Bind_CostChart("Work Package", DDLWorkPackage.SelectedValue);
                    if (rdSelect.SelectedValue == "1")
                    {
                        LoadGraph(); //Physical progress chart
                    }
                    else if (rdSelect.SelectedValue == "2")
                    {
                        LoadFinancialGraph();
                    }
                        BindCamera(DDLWorkPackage.SelectedValue);
                        heading.InnerHtml = "Physical Progress Chart - " + DDlProject.SelectedItem.Text + " (" + DDLWorkPackage.SelectedItem.Text + ")";
                        headingF.InnerHtml = "Financial Progress Chart - " + DDlProject.SelectedItem.Text + " (" + DDLWorkPackage.SelectedItem.Text + ")";

                    DbSyncStatusCount(DDLWorkPackage.SelectedValue);
                    getDashboardImages(DDLWorkPackage.SelectedValue);

                    Session["Project_Workpackage"] = DDlProject.SelectedValue + "_" + DDLWorkPackage.SelectedValue;
                    // added on 10/01/2022 for docs to act on for the user

                    if (Session["TypeOfUser"].ToString() != "U" && Session["TypeOfUser"].ToString() != "VP" && Session["TypeOfUser"].ToString() != "MD")
                    {
                        divUsersdocs.Visible = true;
                        //if (getUserDocsNo() == 0)
                        //{
                        //    Hluserdocs.HRef = "#";
                        //    Hluserdocs.InnerText = "no documents";
                        //}
                        //else
                        //{
                        //    Hluserdocs.InnerText = getUserDocsNo() + " documents";
                        //    Hluserdocs.HRef = "~/_content_pages/documents-contractor/?&type=Ontb&PrjUID=" + DDlProject.SelectedValue + "&UserUID=" + Session["UserUID"].ToString() + "&WkpgUID=" + DDLWorkPackage.SelectedValue;
                        //}
                    }
                    else
                    {
                        divUsersdocs.Visible = false;
                    }
                }
                    else
                    {
                        DDLWorkPackage.DataSource = null;
                        DDLWorkPackage.DataBind();
                        ltScripts_piechart.Text = "<h4>No data</h4>";
                        ltScript_Progress.Text = "<h4>No data</h4>";
                        ltScript_Document.Text = "<h4>No data</h4>";
                        ltScript_Resource.Text = "<h4>No data</h4>";
                        ltScript_PhysicalProgress.Text= "<h4>No data</h4>";
                        ltScript_FinProgress.Text = "<h4>No data</h4>";
                        divtable.InnerHtml = "";
                        btnPrint.Visible = false;
                }
                //}
            }
            else
            {
                ltScripts_piechart.Text = "<h4>No data</h4>";
                ltScript_Progress.Text = "<h4>No data</h4>";
                ltScript_Document.Text = "<h4>No data</h4>";
                ltScript_Resource.Text = "<h4>No data</h4>";
                ltScript_PhysicalProgress.Text = "<h4>No data</h4>";
                ltScript_FinProgress.Text = "<h4>No data</h4>";
                divtable.InnerHtml = ""; 
                btnPrint.Visible = false;
                DDLWorkPackage.Items.Clear();
                DDLWorkPackage.Items.Insert(0, "--Select--");
                divdashboardimage.Visible = false;
                divUsersdocs.Visible = false;
                if (WebConfigurationManager.AppSettings["Domain"] == "NJSEI")
                {
                    divdummydashboard.Visible = false;
                    dummyNJSEIdashboard.Visible = true;
                    divNJSEIMIS.Visible = false;
                    dummyONTBdashboard.Visible = false;
                }
                else
                {
                    divdummydashboard.Visible = false;
                    dummyONTBdashboard.Visible = true;
                    dummyNJSEIdashboard.Visible = false;
                    divNJSEIMIS.Visible = false;
                   // rdSelect.Items[3].Text = "";
                   // rdSelect.Items[3].Enabled = false;
                }
            }

            //
            if(DDlProject.SelectedItem.ToString() == "CP-25" || DDlProject.SelectedItem.ToString() == "CP-26" || DDlProject.SelectedItem.ToString() == "CP-27")
            {
                alinksummarySTP.Visible = true;
                divContractorCPDocs.Visible = true;
                DataSet ds = getdt.GetDashboardContractotDocsSubmitted_Details(new Guid(DDlProject.SelectedValue));
                if (ds.Tables[0].AsEnumerable()
         .OrderByDescending(r => r.Field<DateTime>("IncomingRec_Date"))
                        .Where(r => r.Field<Guid>("FlowUID").ToString().ToLower().Equals("f76821a4-289b-468f-92d5-f4965481546c")).Count() > 0)
                {
                    DataTable dt = ds.Tables[0].AsEnumerable()
             .OrderByDescending(r => r.Field<DateTime>("IncomingRec_Date"))
                            .Where(r => r.Field<Guid>("FlowUID").ToString().ToLower().Equals("f76821a4-289b-468f-92d5-f4965481546c")).CopyToDataTable();
                    

                    hlContractorCPDocs.HRef = "~/_content_pages/documents-contractor/?&type=Contractor&Flow=Contractor Correspondence&&PrjUID=" + DDlProject.SelectedValue;
                    hlContractorCPDocs.InnerText = "Contractor Correspondence (" + dt.Rows.Count + ")";

                    DataSet ds1 = getdt.ClientDocumentsONTB_BWSSB_Correspondence(new Guid(DDlProject.SelectedValue), new Guid(DDLWorkPackage.SelectedValue), "All","All","");


                    A1.HRef = "~/_content_pages/document-correspondence?ProjectUID=" + DDlProject.SelectedValue + "&WorkPackageUID=" + DDLWorkPackage.SelectedValue;
                    if (ds1 != null)
                    {
                        A1.InnerText = "ONTB/BWSSB Correspondance (" + ds1.Tables[0].Rows.Count + ")";
                    }
                }
                else
                {
                    hlContractorCPDocs.InnerText = "Contractor Correspondence (0)";
                    hlContractorCPDocs.HRef = "#";

                }


            }
            else
            {
                alinksummarySTP.Visible = false;
                divContractorCPDocs.Visible = false;
            }
            //
            if (WebConfigurationManager.AppSettings["Domain"] == "Suez")
            {
                divUsersdocs.Visible = false;
            }
        }

----------------------------------------------------------------------------

  <div class="col-md-6 col-xl-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h6 class="card-title text-muted text-uppercase font-weight-bold">Status of Design,Drawings & Documentation </h6>
                           <asp:RadioButtonList ID="RdList3" runat="server" RepeatDirection="Horizontal"  class="card-title text-muted text-uppercase font-weight-bold" AutoPostBack="true" OnSelectedIndexChanged="RdList3_SelectedIndexChanged">
                                   <%-- <asp:ListItem Value="Progress">&nbsp;Progress Chart&nbsp;&nbsp;</asp:ListItem>--%>
                                    <asp:ListItem Value="Total" Selected="True">&nbsp;Total Documents</asp:ListItem>  
                                    <asp:ListItem Value="Contractor">&nbsp;Contractor->ONTB Documents</asp:ListItem>  
                                </asp:RadioButtonList>
                             <asp:Literal ID="ltScript_Document" runat="server"></asp:Literal>
                            <a href="#" runat="server" id="BtoF">Back To Flow</a>
                      <div id="DocChart_Div" style="width:100%; height:275px;"></div>
                            </div>
                    </div>
                </div>